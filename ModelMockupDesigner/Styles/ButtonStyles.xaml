<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    mc:Ignorable="d">


    <Style TargetType="{x:Type Button}" x:Key="TextButton" >
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource HyperlinkBlueBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <TextBlock Text="{TemplateBinding Content}"
                                   Focusable="False"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                   Margin="{TemplateBinding Margin}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   TextDecorations="Underline"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource HyperlinkRed}" Duration="0" Storyboard.TargetProperty="Foreground.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource HyperlinkBlue}" Duration="0" Storyboard.TargetProperty="Foreground.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="TextButtonNoUnderline" >
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource HyperlinkBlueBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <TextBlock Text="{TemplateBinding Content}"
                                   Focusable="False"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                   Margin="{TemplateBinding Margin}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource HyperlinkRed}" Duration="0" Storyboard.TargetProperty="Foreground.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource HyperlinkBlue}" Duration="0" Storyboard.TargetProperty="Foreground.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="FFGButton" >
        <Setter Property="Background" Value="LightSlateGray"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="SlateGray"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,5"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            CornerRadius="3">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="3" BlurRadius="3"/>
                        </Border.Effect>
                        <TextBlock Text="{TemplateBinding Content}"
                                   Focusable="False"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="SlateGray" Duration="0:0:0.3" Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="LightSlateGray" Duration="0:0:0.3" Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="#767F89" Duration="0" Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="SlateGray" Duration="0" Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}" x:Key="YesNoButton" >
        <Setter Property="Foreground" Value="#FF111111"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.25" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="shine" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.25" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="shine" />
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontStyle)" Storyboard.TargetName="contentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <FontStyle>Normal</FontStyle>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Disabled1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Checked1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Normal1" HorizontalAlignment="Left" VerticalAlignment="Top" Background="#FFCAE7EF" CornerRadius="5" BorderThickness="0,0,2,2" BorderBrush="#FFA3AFB2" Height="{Binding Path=ActualHeight, ElementName=border}" Width="35" Visibility="Visible" />
                        <Border x:Name="Disabled1" HorizontalAlignment="Left" VerticalAlignment="Top" Background="#FFDDDDDD" CornerRadius="5" BorderThickness="0,0,2,2" BorderBrush="#FFCCCCCC" Height="{Binding Path=ActualHeight, ElementName=border}" Width="35" Visibility="Collapsed" />
                        <Border x:Name="Checked1" HorizontalAlignment="Left" VerticalAlignment="Top" Background="#FFE87900" CornerRadius="5" BorderThickness="0,0,2,2" BorderBrush="#FF9F6C34" Height="{Binding Path=ActualHeight, ElementName=border}" Width="35" Visibility="Collapsed" />
                        <Border x:Name="border" HorizontalAlignment="Left" VerticalAlignment="Top" Background="Transparent" CornerRadius="5" BorderThickness="0,0,2,2" BorderBrush="Transparent" Width="35" >
                            <TextBlock x:Name="contentPresenter" Text="{TemplateBinding Content}" Foreground="#FF111111" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,4,-1,4" TextAlignment="Center"/>
                        </Border>
                        <Border x:Name="shine" Background="#FFFFFFFF" CornerRadius="5" BorderThickness="0,0,2,2" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadioButtonStyle1" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid x:Name="grid" Margin="2,0" VerticalAlignment="Center" MinHeight="23" Background="#00FFFFFF">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="19"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontStyle)" Storyboard.TargetName="contentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <FontStyle>Normal</FontStyle>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="check" />
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                </VisualState>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="norm" BorderThickness="0" Grid.ColumnSpan="2" Height="20" Margin="0,1,0,0" CornerRadius="4" Background="White" VerticalAlignment="Top" />
                        <Border x:Name="hover" BorderThickness="0" Background="#33000000" Grid.ColumnSpan="2" Height="20" Margin="0,1,0,0" CornerRadius="4" Opacity="0" VerticalAlignment="Top" />
                        <Border x:Name="check" BorderThickness="0" Background="#FFF59964" Grid.ColumnSpan="2" Height="20" Margin="0,1,0,0" CornerRadius="4" Opacity="0" VerticalAlignment="Top" />
                        <Border x:Name="border" Margin="3,-1,0,0" CornerRadius="6" BorderThickness="2" Background="White" BorderBrush="#FF666666" Width="12" Height="12" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Ellipse x:Name="CheckIcon" Fill="#FF333333" Width="4" Height="4" Opacity="0" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                        <ContentPresenter Grid.Column="1"  Margin="-2,-1,2,0" x:Name="contentPresenter" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region Icon Buttons -->

    <Style x:Key="buttonFocusVisual" TargetType="Button">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid  Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="IconButton" >
        <Setter Property="Background" Value="LightSlateGray"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="SlateGray"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,5"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <ContentPresenter>
                            <ContentPresenter.Effect>
                                <DropShadowEffect x:Name="shadow"
                                              ShadowDepth="2"
                                              Opacity="0.7"
                                              BlurRadius="3"/>
                            </ContentPresenter.Effect>
                            <ContentPresenter.RenderTransform>
                                <TranslateTransform x:Name="translation"
                                                X="-1" Y="-1"/>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Grid>

                    <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Duration="0:0:0"
                                                To="0"
                                                Storyboard.TargetName="shadow"
                                                Storyboard.TargetProperty="(DropShadowEffect.ShadowDepth)"/>
                                            <DoubleAnimation
                                                Duration="0:0:0"
                                                To="0"
                                                Storyboard.TargetName="translation"
                                                Storyboard.TargetProperty="(TranslateTransform.X)"/>
                                            <DoubleAnimation
                                                Duration="0:0:0"
                                                To="0"
                                                Storyboard.TargetName="translation"
                                                Storyboard.TargetProperty="(TranslateTransform.Y)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Duration="0:0:0"
                                                To="2"
                                                Storyboard.TargetName="shadow"
                                                Storyboard.TargetProperty="(DropShadowEffect.ShadowDepth)"/>
                                            <DoubleAnimation
                                                Duration="0:0:0"
                                                To="-1"
                                                Storyboard.TargetName="translation"
                                                Storyboard.TargetProperty="(TranslateTransform.X)"/>
                                            <DoubleAnimation
                                                Duration="0:0:0"
                                                To="-1"
                                                Storyboard.TargetName="translation"
                                                Storyboard.TargetProperty="(TranslateTransform.Y)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="CreateNewButton" >
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="ContentGrid">
                        <Grid.Effect>
                            <DropShadowEffect x:Name="shadow"
                                              ShadowDepth="2"
                                              Opacity="0.7"
                                              BlurRadius="3"/>
                        </Grid.Effect>
                        <!--<Grid.RenderTransform>
                            <TranslateTransform x:Name="translation"
                                                X="-1" Y="-1"/>
                        </Grid.RenderTransform>-->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.0000000"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="gridImage" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="gridImage" Background="Transparent">
                            <iconPacks:PackIconMaterial  Kind="FilePlus" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource WhiteBrush}" Height="50" Width="50"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="OpenButton" >
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="ContentGrid">
                        <Grid.Effect>
                            <DropShadowEffect x:Name="shadow"
                                              ShadowDepth="2"
                                              Opacity="0.7"
                                              BlurRadius="3"/>
                        </Grid.Effect>
                        <!--<Grid.RenderTransform>
                            <TranslateTransform x:Name="translation"
                                                X="-1" Y="-1"/>
                        </Grid.RenderTransform>-->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.0000000"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="gridImage" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="gridImage"  Background="Transparent">
                            <iconPacks:PackIconMaterial Kind="FolderOpen" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource WhiteBrush}" Height="50" Width="50" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="ExportButton" >
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="ContentGrid">
                        <Grid.Effect>
                            <DropShadowEffect x:Name="shadow"
                                              ShadowDepth="2"
                                              Opacity="0.7"
                                              BlurRadius="3"/>
                        </Grid.Effect>
                        <!--<Grid.RenderTransform>
                            <TranslateTransform x:Name="translation"
                                                X="-1" Y="-1"/>
                        </Grid.RenderTransform>-->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.0000000"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="gridImage" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="gridImage" Background="Transparent">
                            <iconPacks:PackIconMaterial Kind="FileExport" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource WhiteBrush}" Height="50" Width="50" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="SettingsButton" >
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="ContentGrid">
                        <Grid.Effect>
                            <DropShadowEffect x:Name="shadow"
                                              ShadowDepth="2"
                                              Opacity="0.7"
                                              BlurRadius="3"/>
                        </Grid.Effect>
                        <!--<Grid.RenderTransform>
                            <TranslateTransform x:Name="translation"
                                                X="-1" Y="-1"/>
                        </Grid.RenderTransform>-->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.0000000"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="gridImage" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="gridImage" Background="Transparent">
                            <iconPacks:PackIconMaterial Kind="Tools" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource WhiteBrush}" Height="50" Width="50" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="ExitButton" >
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="ContentGrid">
                        <Grid.Effect>
                            <DropShadowEffect x:Name="shadow"
                                              ShadowDepth="2"
                                              Opacity="0.7"
                                              BlurRadius="3"/>
                        </Grid.Effect>
                        <!--<Grid.RenderTransform>
                            <TranslateTransform x:Name="translation"
                                                X="-1" Y="-1"/>
                        </Grid.RenderTransform>-->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.0000000"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="gridImage" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="gridImage" Background="Transparent">
                            <iconPacks:PackIconMaterial Kind="ExitRun" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource WhiteBrush}" Height="50" Width="50" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!--#endregion-->

    <Style x:Key="noFocusButtonT" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid" Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="touchToggleButton" TargetType="ToggleButton">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="UseLayoutRounding" Value="True"></Setter>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Height="29" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="wrapper">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontStyle)" Storyboard.TargetName="buttonContent">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <FontStyle>Normal</FontStyle>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonContent">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Indeterminate"/>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Background="Transparent" x:Name="wrapper" Margin="0">
                            <Border x:Name="normal" Background="#FF24B0D1" CornerRadius="4"></Border>
                            <Border x:Name="override" Background="{TemplateBinding Background}" CornerRadius="4"></Border>
                            <Border x:Name="pressed" Background="#FFE87900" CornerRadius="4" Opacity="0"></Border>
                            <Border x:Name="disabled" Background="#FFDDDDDD" CornerRadius="4" Opacity="0"></Border>
                            <Border x:Name="border" BorderThickness="1" CornerRadius="4" BorderBrush="#33000000"></Border>
                            <Border x:Name="indent" BorderThickness="1,1,0,0" CornerRadius="3" BorderBrush="#66FFFFFF" Margin="1"></Border>
                            <ContentPresenter x:Name="buttonContent" Content="{TemplateBinding Content}" VerticalAlignment="Center" Margin="8,0" HorizontalAlignment="Center" SnapsToDevicePixels="True" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="touchButtonWizard" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="UseLayoutRounding" Value="True"></Setter>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="wrapper">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontStyle)" Storyboard.TargetName="buttonContent">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <FontStyle>Normal</FontStyle>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonContent">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Background="Transparent" x:Name="wrapper" Margin="0">
                            <Border x:Name="normal" Background="#FF24B0D1" CornerRadius="4"></Border>
                            <Border x:Name="override" Background="{TemplateBinding Background}" CornerRadius="4"></Border>
                            <Border x:Name="pressed" Background="#FFE87900" CornerRadius="4" Opacity="0"></Border>
                            <Border x:Name="disabled" Background="#FFDDDDDD" CornerRadius="4" Opacity="0"></Border>
                            <Border x:Name="border" BorderThickness="1" CornerRadius="4" BorderBrush="#33000000"></Border>
                            <Border x:Name="indent" BorderThickness="1,1,0,0" CornerRadius="3" BorderBrush="#66FFFFFF" Margin="1"></Border>
                            <ContentPresenter x:Name="buttonContent" Content="{TemplateBinding Content}" VerticalAlignment="Center" Margin="2,0" HorizontalAlignment="Center" SnapsToDevicePixels="True" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="touchButtonBack" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="29" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="wrapper">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontStyle)" Storyboard.TargetName="buttonContent">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <FontStyle>Normal</FontStyle>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonContent">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Background="Transparent" x:Name="wrapper" Margin="0">
                            <Border x:Name="normal" Background="#FF24B0D1" CornerRadius="4"/>
                            <Border x:Name="override" Background="{TemplateBinding Background}" CornerRadius="4"/>
                            <Border x:Name="pressed" Background="#FFE87900" CornerRadius="4" Opacity="0"/>
                            <Border x:Name="disabled" Background="#FFDDDDDD" CornerRadius="4" Opacity="0"/>
                            <Border x:Name="border" BorderThickness="1" CornerRadius="4" BorderBrush="#33000000"/>
                            <Border x:Name="indent" BorderThickness="1,1,0,0" CornerRadius="3" BorderBrush="#66FFFFFF" Margin="1"/>
                            <Grid Margin="6,0" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="buttonContent" Content="{TemplateBinding Content}" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Margin="7,0" HorizontalAlignment="Center" Grid.Column="1"/>
                                <Grid Margin="5,0,5,0" Grid.Column="0">
                                    <Path Data="M0,0 L-15,7.5 L0,15 z" Fill="White" Stretch="Fill" UseLayoutRounding="False" HorizontalAlignment="Center"  VerticalAlignment="Center" Width="15" Height="16"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="touchButton" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Height" Value="29"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="UseLayoutRounding" Value="True"></Setter>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="wrapper">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontStyle)" Storyboard.TargetName="buttonContent">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <FontStyle>Normal</FontStyle>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonContent">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Background="Transparent" x:Name="wrapper" Margin="0">
                            <Border x:Name="normal" Background="#FF24B0D1" CornerRadius="4"></Border>
                            <Border x:Name="override" Background="{TemplateBinding Background}" CornerRadius="4"></Border>
                            <Border x:Name="pressed" Background="#FFE87900" CornerRadius="4" Opacity="0"></Border>
                            <Border x:Name="disabled" Background="#FFDDDDDD" CornerRadius="4" Opacity="0"></Border>
                            <Border x:Name="border" BorderThickness="1" CornerRadius="4" BorderBrush="#33000000"></Border>
                            <Border x:Name="indent" BorderThickness="1,1,0,0" CornerRadius="3" BorderBrush="#66FFFFFF" Margin="1"></Border>
                            <ContentPresenter x:Name="buttonContent" Content="{TemplateBinding Content}" VerticalAlignment="Center" Margin="8,0" HorizontalAlignment="Center" SnapsToDevicePixels="True" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="touchButtonNext" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="29" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="wrapper">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontStyle)" Storyboard.TargetName="buttonContent">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <FontStyle>Normal</FontStyle>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonContent">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Background="Transparent" x:Name="wrapper" Margin="0">
                            <Border x:Name="normal" Background="#FF24B0D1" CornerRadius="4"/>
                            <Border x:Name="override" Background="{TemplateBinding Background}" CornerRadius="4"/>
                            <Border x:Name="pressed" Background="#FFE87900" CornerRadius="4" Opacity="0"/>
                            <Border x:Name="disabled" Background="#FFDDDDDD" CornerRadius="4" Opacity="0"/>
                            <Border x:Name="border" BorderThickness="1" CornerRadius="4" BorderBrush="#33000000"/>
                            <Border x:Name="indent" BorderThickness="1,1,0,0" CornerRadius="3" BorderBrush="#66FFFFFF" Margin="1"/>
                            <Grid Margin="6,0" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="buttonContent" Content="{TemplateBinding Content}" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Margin="7,0" HorizontalAlignment="Center" Grid.Column="0"/>
                                <Grid Margin="5,0,5,0" Grid.Column="1">
                                    <Path Data="M0,0 L15,7.5 L0,15 z" Fill="White" Stretch="Fill" UseLayoutRounding="False" HorizontalAlignment="Center"  VerticalAlignment="Center" Width="15" Height="16"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="touchButtonCancel" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="29" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="wrapper">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontStyle)" Storyboard.TargetName="buttonContent">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <FontStyle>Normal</FontStyle>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonContent">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Background="Transparent" x:Name="wrapper" Margin="0">
                            <Border x:Name="normal" Background="#FF24B0D1" CornerRadius="4"/>
                            <Border x:Name="override" Background="{TemplateBinding Background}" CornerRadius="4"/>
                            <Border x:Name="pressed" Background="#FFE87900" CornerRadius="4" Opacity="0"/>
                            <Border x:Name="disabled" Background="#FFDDDDDD" CornerRadius="4" Opacity="0"/>
                            <Border x:Name="border" BorderThickness="1" CornerRadius="4" BorderBrush="#33000000"/>
                            <Border x:Name="indent" BorderThickness="1,1,0,0" CornerRadius="3" BorderBrush="#66FFFFFF" Margin="1"/>
                            <Grid Margin="6,0" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0">
                                    <Path x:Name="Path" Width="19" Height="19" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" Fill="White" Data="F1 M 9.5,0C 14.7467,0 19,4.2533 19,9.5C 19,14.7467 14.7467,19 9.5,19C 4.25329,19 0,14.7467 0,9.5C 0,4.2533 4.25329,0 9.5,0 Z M 3.13604,13.7426L 5.25736,15.864L 9.5,11.6213L 13.7426,15.864L 15.864,13.7426L 11.6213,9.5L 15.864,5.25736L 13.7426,3.13604L 9.5,7.37868L 5.25736,3.13604L 3.13604,5.25736L 7.37868,9.5L 3.13604,13.7426 Z " SnapsToDevicePixels="False"/>
                                </Grid>
                                <ContentPresenter x:Name="buttonContent" Grid.Column="1" Content="{TemplateBinding Content}" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Margin="7,0" HorizontalAlignment="Center" />
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>